///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V8.10.3.10338/W32 for 8051        28/May/2022  11:54:11 /
// Copyright 2004-2011 IAR Systems AB.                                        /
//                                                                            /
//    Core               =  plain                                             /
//    Code model         =  banked                                            /
//    Data model         =  large                                             /
//    Calling convention =  xdata reentrant                                   /
//    Constant location  =  data_rom                                          /
//    Dptr setup         =  1,16                                              /
//    Source file        =  H:\ÎïÁªÍøÊµÑµÏîÄ¿ËùÓĞ×ÊÁÏ\2.ÏîÄ¿ÍêÕûÔ´Âë\cc2530\Z /
//                          Stack-CC2530-2.5.1a\Projects\zstack\Samples\Gener /
//                          icApp\Source\dht11.C                              /
//    Command line       =  -f H:\ÎïÁªÍøÊµÑµÏîÄ¿ËùÓĞ×ÊÁÏ\2.ÏîÄ¿ÍêÕûÔ´Âë\cc253 /
//                          0\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\Ge /
//                          nericApp\CC2530DB\..\..\..\Tools\CC2530DB\f8wCoor /
//                          d.cfg (-DCPU32MHZ -DROOT=__near_func              /
//                          -DMAC_CFG_APP_PENDING_QUEUE=TRUE                  /
//                          -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8        /
//                          -DMAC_CFG_RX_MAX=5 -DZDO_COORDINATOR -DRTR_NWK)   /
//                          -f H:\ÎïÁªÍøÊµÑµÏîÄ¿ËùÓĞ×ÊÁÏ\2.ÏîÄ¿ÍêÕûÔ´Âë\cc253 /
//                          0\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\Ge /
//                          nericApp\CC2530DB\..\..\..\Tools\CC2530DB\f8wConf /
//                          ig.cfg (-DZIGBEEPRO -DSECURE=0                    /
//                          -DZG_SECURE_DYNAMIC=0 -DREFLECTOR                 /
//                          -DDEFAULT_CHANLIST=0x00000800                     /
//                          -DZDAPP_CONFIG_PAN_ID=0xFFFF                      /
//                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_M /
//                          ASK=0x007F -DBEACON_REQUEST_DELAY=100             /
//                          -DBEACON_REQ_DELAY_MASK=0x00FF                    /
//                          -DLINK_STATUS_JITTER_MASK=0x007F                  /
//                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_P /
//                          OLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7           /
//                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3   /
//                          -DNWK_MAX_DATA_RETRIES=2                          /
//                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9        /
//                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40          /
//                          -DNWK_MAX_BINDING_ENTRIES=4                       /
//                          -DMAX_BINDING_CLUSTER_IDS=4                       /
//                          "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07, 0x09,     /
//                          0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08,   /
//                          0x0A, 0x0C, 0x0D}" -DMAC_MAX_FRAME_SIZE=116       /
//                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const    /
//                          __code" -DGENERIC=__generic                       /
//                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000       /
//                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)  /
//                          -DREJOIN_POLL_RATE=440 H:\ÎïÁªÍøÊµÑµÏîÄ¿ËùÓĞ×ÊÁÏ\ /
//                          2.ÏîÄ¿ÍêÕûÔ´Âë\cc2530\ZStack-CC2530-2.5.1a\Projec /
//                          ts\zstack\Samples\GenericApp\Source\dht11.C -D    /
//                          ZTOOL_P1 -D MT_TASK -D MT_SYS_FUNC -D             /
//                          MT_ZDO_FUNC -D LCD_SUPPORTED=DEBUG -lC            /
//                          H:\ÎïÁªÍøÊµÑµÏîÄ¿ËùÓĞ×ÊÁÏ\2.ÏîÄ¿ÍêÕûÔ´Âë\cc2530\Z /
//                          Stack-CC2530-2.5.1a\Projects\zstack\Samples\Gener /
//                          icApp\CC2530DB\CoordinatorEB\List\ -lA            /
//                          H:\ÎïÁªÍøÊµÑµÏîÄ¿ËùÓĞ×ÊÁÏ\2.ÏîÄ¿ÍêÕûÔ´Âë\cc2530\Z /
//                          Stack-CC2530-2.5.1a\Projects\zstack\Samples\Gener /
//                          icApp\CC2530DB\CoordinatorEB\List\                /
//                          --diag_suppress Pe001,Pa010 -o                    /
//                          H:\ÎïÁªÍøÊµÑµÏîÄ¿ËùÓĞ×ÊÁÏ\2.ÏîÄ¿ÍêÕûÔ´Âë\cc2530\Z /
//                          Stack-CC2530-2.5.1a\Projects\zstack\Samples\Gener /
//                          icApp\CC2530DB\CoordinatorEB\Obj\ -e              /
//                          --no_code_motion --debug --core=plain             /
//                          --dptr=16,1 --data_model=large                    /
//                          --code_model=banked --calling_convention=xdata_re /
//                          entrant --place_constants=data_rom                /
//                          --nr_virtual_regs 16 -I                           /
//                          H:\ÎïÁªÍøÊµÑµÏîÄ¿ËùÓĞ×ÊÁÏ\2.ÏîÄ¿ÍêÕûÔ´Âë\cc2530\Z /
//                          Stack-CC2530-2.5.1a\Projects\zstack\Samples\Gener /
//                          icApp\CC2530DB\ -I H:\ÎïÁªÍøÊµÑµÏîÄ¿ËùÓĞ×ÊÁÏ\2.Ïî /
//                          Ä¿ÍêÕûÔ´Âë\cc2530\ZStack-CC2530-2.5.1a\Projects\z /
//                          stack\Samples\GenericApp\CC2530DB\..\Source\ -I   /
//                          H:\ÎïÁªÍøÊµÑµÏîÄ¿ËùÓĞ×ÊÁÏ\2.ÏîÄ¿ÍêÕûÔ´Âë\cc2530\Z /
//                          Stack-CC2530-2.5.1a\Projects\zstack\Samples\Gener /
//                          icApp\CC2530DB\..\..\..\ZMain\TI2530DB\ -I        /
//                          H:\ÎïÁªÍøÊµÑµÏîÄ¿ËùÓĞ×ÊÁÏ\2.ÏîÄ¿ÍêÕûÔ´Âë\cc2530\Z /
//                          Stack-CC2530-2.5.1a\Projects\zstack\Samples\Gener /
//                          icApp\CC2530DB\..\..\..\..\..\Components\hal\incl /
//                          ude\ -I H:\ÎïÁªÍøÊµÑµÏîÄ¿ËùÓĞ×ÊÁÏ\2.ÏîÄ¿ÍêÕûÔ´Âë\ /
//                          cc2530\ZStack-CC2530-2.5.1a\Projects\zstack\Sampl /
//                          es\GenericApp\CC2530DB\..\..\..\..\..\Components\ /
//                          hal\target\CC2530EB\ -I                           /
//                          H:\ÎïÁªÍøÊµÑµÏîÄ¿ËùÓĞ×ÊÁÏ\2.ÏîÄ¿ÍêÕûÔ´Âë\cc2530\Z /
//                          Stack-CC2530-2.5.1a\Projects\zstack\Samples\Gener /
//                          icApp\CC2530DB\..\..\..\..\..\Components\mac\incl /
//                          ude\ -I H:\ÎïÁªÍøÊµÑµÏîÄ¿ËùÓĞ×ÊÁÏ\2.ÏîÄ¿ÍêÕûÔ´Âë\ /
//                          cc2530\ZStack-CC2530-2.5.1a\Projects\zstack\Sampl /
//                          es\GenericApp\CC2530DB\..\..\..\..\..\Components\ /
//                          mac\high_level\ -I H:\ÎïÁªÍøÊµÑµÏîÄ¿ËùÓĞ×ÊÁÏ\2.Ïî /
//                          Ä¿ÍêÕûÔ´Âë\cc2530\ZStack-CC2530-2.5.1a\Projects\z /
//                          stack\Samples\GenericApp\CC2530DB\..\..\..\..\..\ /
//                          Components\mac\low_level\srf04\ -I                /
//                          H:\ÎïÁªÍøÊµÑµÏîÄ¿ËùÓĞ×ÊÁÏ\2.ÏîÄ¿ÍêÕûÔ´Âë\cc2530\Z /
//                          Stack-CC2530-2.5.1a\Projects\zstack\Samples\Gener /
//                          icApp\CC2530DB\..\..\..\..\..\Components\mac\low_ /
//                          level\srf04\single_chip\ -I                       /
//                          H:\ÎïÁªÍøÊµÑµÏîÄ¿ËùÓĞ×ÊÁÏ\2.ÏîÄ¿ÍêÕûÔ´Âë\cc2530\Z /
//                          Stack-CC2530-2.5.1a\Projects\zstack\Samples\Gener /
//                          icApp\CC2530DB\..\..\..\..\..\Components\mt\ -I   /
//                          H:\ÎïÁªÍøÊµÑµÏîÄ¿ËùÓĞ×ÊÁÏ\2.ÏîÄ¿ÍêÕûÔ´Âë\cc2530\Z /
//                          Stack-CC2530-2.5.1a\Projects\zstack\Samples\Gener /
//                          icApp\CC2530DB\..\..\..\..\..\Components\osal\inc /
//                          lude\ -I H:\ÎïÁªÍøÊµÑµÏîÄ¿ËùÓĞ×ÊÁÏ\2.ÏîÄ¿ÍêÕûÔ´Âë /
//                          \cc2530\ZStack-CC2530-2.5.1a\Projects\zstack\Samp /
//                          les\GenericApp\CC2530DB\..\..\..\..\..\Components /
//                          \services\saddr\ -I H:\ÎïÁªÍøÊµÑµÏîÄ¿ËùÓĞ×ÊÁÏ\2.Ï /
//                          îÄ¿ÍêÕûÔ´Âë\cc2530\ZStack-CC2530-2.5.1a\Projects\ /
//                          zstack\Samples\GenericApp\CC2530DB\..\..\..\..\.. /
//                          \Components\services\sdata\ -I                    /
//                          H:\ÎïÁªÍøÊµÑµÏîÄ¿ËùÓĞ×ÊÁÏ\2.ÏîÄ¿ÍêÕûÔ´Âë\cc2530\Z /
//                          Stack-CC2530-2.5.1a\Projects\zstack\Samples\Gener /
//                          icApp\CC2530DB\..\..\..\..\..\Components\stack\af /
//                          \ -I H:\ÎïÁªÍøÊµÑµÏîÄ¿ËùÓĞ×ÊÁÏ\2.ÏîÄ¿ÍêÕûÔ´Âë\cc2 /
//                          530\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\ /
//                          GenericApp\CC2530DB\..\..\..\..\..\Components\sta /
//                          ck\nwk\ -I H:\ÎïÁªÍøÊµÑµÏîÄ¿ËùÓĞ×ÊÁÏ\2.ÏîÄ¿ÍêÕûÔ´ /
//                          Âë\cc2530\ZStack-CC2530-2.5.1a\Projects\zstack\Sa /
//                          mples\GenericApp\CC2530DB\..\..\..\..\..\Componen /
//                          ts\stack\sapi\ -I H:\ÎïÁªÍøÊµÑµÏîÄ¿ËùÓĞ×ÊÁÏ\2.ÏîÄ /
//                          ¿ÍêÕûÔ´Âë\cc2530\ZStack-CC2530-2.5.1a\Projects\zs /
//                          tack\Samples\GenericApp\CC2530DB\..\..\..\..\..\C /
//                          omponents\stack\sec\ -I                           /
//                          H:\ÎïÁªÍøÊµÑµÏîÄ¿ËùÓĞ×ÊÁÏ\2.ÏîÄ¿ÍêÕûÔ´Âë\cc2530\Z /
//                          Stack-CC2530-2.5.1a\Projects\zstack\Samples\Gener /
//                          icApp\CC2530DB\..\..\..\..\..\Components\stack\sy /
//                          s\ -I H:\ÎïÁªÍøÊµÑµÏîÄ¿ËùÓĞ×ÊÁÏ\2.ÏîÄ¿ÍêÕûÔ´Âë\cc /
//                          2530\ZStack-CC2530-2.5.1a\Projects\zstack\Samples /
//                          \GenericApp\CC2530DB\..\..\..\..\..\Components\st /
//                          ack\zdo\ -I H:\ÎïÁªÍøÊµÑµÏîÄ¿ËùÓĞ×ÊÁÏ\2.ÏîÄ¿ÍêÕûÔ /
//                          ´Âë\cc2530\ZStack-CC2530-2.5.1a\Projects\zstack\S /
//                          amples\GenericApp\CC2530DB\..\..\..\..\..\Compone /
//                          nts\zmac\ -I H:\ÎïÁªÍøÊµÑµÏîÄ¿ËùÓĞ×ÊÁÏ\2.ÏîÄ¿ÍêÕû /
//                          Ô´Âë\cc2530\ZStack-CC2530-2.5.1a\Projects\zstack\ /
//                          Samples\GenericApp\CC2530DB\..\..\..\..\..\Compon /
//                          ents\zmac\f8w\ -Ohz --require_prototypes          /
//    List file          =  H:\ÎïÁªÍøÊµÑµÏîÄ¿ËùÓĞ×ÊÁÏ\2.ÏîÄ¿ÍêÕûÔ´Âë\cc2530\Z /
//                          Stack-CC2530-2.5.1a\Projects\zstack\Samples\Gener /
//                          icApp\CC2530DB\CoordinatorEB\List\dht11.s51       /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME dht11

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?BRET
        EXTERN ?V0
        EXTERN __INIT_XDATA_I
        EXTERN __INIT_XDATA_Z

        PUBLIC ??COM?relay
        FUNCTION ??COM?relay,0203H
        PUBLIC ??DATA_IO_input_Cfg?relay
        FUNCTION ??DATA_IO_input_Cfg?relay,0203H
        PUBLIC ??DATA_IO_output_Cfg?relay
        FUNCTION ??DATA_IO_output_Cfg?relay,0203H
        PUBLIC ??Delay_10us?relay
        FUNCTION ??Delay_10us?relay,0203H
        PUBLIC ??Delay_ms?relay
        FUNCTION ??Delay_ms?relay,0203H
        PUBLIC ??Delay_us?relay
        FUNCTION ??Delay_us?relay,0203H
        PUBLIC ??readDHT11?relay
        FUNCTION ??readDHT11?relay,0203H
        PUBLIC COM
        FUNCTION COM,021203H
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME XSTACK, 9, STACK
        PUBLIC DATA_IO_input_Cfg
        FUNCTION DATA_IO_input_Cfg,0203H
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUBLIC DATA_IO_output_Cfg
        FUNCTION DATA_IO_output_Cfg,0203H
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUBLIC Delay_10us
        FUNCTION Delay_10us,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC Delay_ms
        FUNCTION Delay_ms,021203H
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 9, STACK
        PUBLIC Delay_us
        FUNCTION Delay_us,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBWEAK P0DIR
        PUBWEAK P0INP
        PUBWEAK P0SEL
        PUBWEAK _A_P0
        PUBWEAK _A_P1
        PUBLIC readDHT11
        FUNCTION readDHT11,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 8, STACK
        PUBLIC shidu_ge
        PUBLIC shidu_shi
        PUBLIC ucharFLAG
        PUBLIC ucharRH_data_H
        PUBLIC ucharRH_data_H_temp
        PUBLIC ucharRH_data_L
        PUBLIC ucharRH_data_L_temp
        PUBLIC ucharT_data_H
        PUBLIC ucharT_data_H_temp
        PUBLIC ucharT_data_L
        PUBLIC ucharT_data_L_temp
        PUBLIC ucharcheckdata
        PUBLIC ucharcheckdata_temp
        PUBLIC ucharcomdata
        PUBLIC uchartemp
        PUBLIC wendu_ge
        PUBLIC wendu_shi
        
        CFI Names cfiNames0
        CFI StackFrame CFA_SP SP IDATA
        CFI StackFrame CFA_PSP16 PSP16 XDATA
        CFI StackFrame CFA_XSP16 XSP16 XDATA
        CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
        CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
        CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
        CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
        CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
        CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
        CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
        CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
        CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
        CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
        CFI VirtualResource ?RET:24
        CFI Resource ?BRET_EXT:8
        CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
        CFI ResourceParts PSP16 PSPH, PSPL
        CFI ResourceParts XSP16 XSPH, XSPL
        CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 1
        CFI DataAlign -1
        CFI ReturnAddress ?RET CODE
        CFI CFA_DOVERLAY Used
        CFI CFA_IOVERLAY Used
        CFI CFA_SP SP+-3
        CFI CFA_PSP16 PSP16+0
        CFI CFA_XSP16 XSP16+0
        CFI `PSW.CY` SameValue
        CFI `B.BR0` SameValue
        CFI `B.BR1` SameValue
        CFI `B.BR2` SameValue
        CFI `B.BR3` SameValue
        CFI `B.BR4` SameValue
        CFI `B.BR5` SameValue
        CFI `B.BR6` SameValue
        CFI `B.BR7` SameValue
        CFI `VB.BR8` SameValue
        CFI `VB.BR9` SameValue
        CFI `VB.BR10` SameValue
        CFI `VB.BR11` SameValue
        CFI `VB.BR12` SameValue
        CFI `VB.BR13` SameValue
        CFI `VB.BR14` SameValue
        CFI `VB.BR15` SameValue
        CFI VB SameValue
        CFI B Undefined
        CFI A Undefined
        CFI PSW SameValue
        CFI DPL0 SameValue
        CFI DPH0 SameValue
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 Undefined
        CFI R5 Undefined
        CFI R6 SameValue
        CFI R7 SameValue
        CFI V0 SameValue
        CFI V1 SameValue
        CFI V2 SameValue
        CFI V3 SameValue
        CFI V4 SameValue
        CFI V5 SameValue
        CFI V6 SameValue
        CFI V7 SameValue
        CFI V8 SameValue
        CFI V9 SameValue
        CFI V10 SameValue
        CFI V11 SameValue
        CFI V12 SameValue
        CFI V13 SameValue
        CFI V14 SameValue
        CFI V15 SameValue
        CFI PSPH Undefined
        CFI PSPL Undefined
        CFI XSPH Undefined
        CFI XSPL Undefined
        CFI ?RET Concat
        CFI ?BRET_EXT Frame(CFA_SP, 3)
        CFI ?RET_HIGH Frame(CFA_SP, 2)
        CFI ?RET_LOW Frame(CFA_SP, 1)
        CFI EndCommon cfiCommon0
        
        
        CFI Common cfiCommon1 Using cfiNames0
        CFI CodeAlign 1
        CFI DataAlign -1
        CFI ReturnAddress ?RET CODE
        CFI CFA_DOVERLAY Used
        CFI CFA_IOVERLAY Used
        CFI CFA_SP SP+-2
        CFI CFA_PSP16 PSP16+0
        CFI CFA_XSP16 XSP16+0
        CFI `PSW.CY` SameValue
        CFI `B.BR0` SameValue
        CFI `B.BR1` SameValue
        CFI `B.BR2` SameValue
        CFI `B.BR3` SameValue
        CFI `B.BR4` SameValue
        CFI `B.BR5` SameValue
        CFI `B.BR6` SameValue
        CFI `B.BR7` SameValue
        CFI `VB.BR8` SameValue
        CFI `VB.BR9` SameValue
        CFI `VB.BR10` SameValue
        CFI `VB.BR11` SameValue
        CFI `VB.BR12` SameValue
        CFI `VB.BR13` SameValue
        CFI `VB.BR14` SameValue
        CFI `VB.BR15` SameValue
        CFI VB SameValue
        CFI B SameValue
        CFI A SameValue
        CFI PSW SameValue
        CFI DPL0 SameValue
        CFI DPH0 SameValue
        CFI R0 SameValue
        CFI R1 SameValue
        CFI R2 SameValue
        CFI R3 SameValue
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI V0 SameValue
        CFI V1 SameValue
        CFI V2 SameValue
        CFI V3 SameValue
        CFI V4 SameValue
        CFI V5 SameValue
        CFI V6 SameValue
        CFI V7 SameValue
        CFI V8 SameValue
        CFI V9 SameValue
        CFI V10 SameValue
        CFI V11 SameValue
        CFI V12 SameValue
        CFI V13 SameValue
        CFI V14 SameValue
        CFI V15 SameValue
        CFI PSPH Undefined
        CFI PSPL Undefined
        CFI XSPH Undefined
        CFI XSPL Undefined
        CFI ?RET Concat
        CFI ?BRET_EXT SameValue
        CFI ?RET_HIGH Frame(CFA_SP, 2)
        CFI ?RET_LOW Frame(CFA_SP, 1)
        CFI EndCommon cfiCommon1
        
Onboard_wait        SYMBOL "Onboard_wait"
??Onboard_wait?relay SYMBOL "?relay", Onboard_wait
COM                 SYMBOL "COM"
??COM?relay         SYMBOL "?relay", COM
DATA_IO_input_Cfg   SYMBOL "DATA_IO_input_Cfg"
??DATA_IO_input_Cfg?relay SYMBOL "?relay", DATA_IO_input_Cfg
DATA_IO_output_Cfg  SYMBOL "DATA_IO_output_Cfg"
??DATA_IO_output_Cfg?relay SYMBOL "?relay", DATA_IO_output_Cfg
Delay_10us          SYMBOL "Delay_10us"
??Delay_10us?relay  SYMBOL "?relay", Delay_10us
Delay_ms            SYMBOL "Delay_ms"
??Delay_ms?relay    SYMBOL "?relay", Delay_ms
Delay_us            SYMBOL "Delay_us"
??Delay_us?relay    SYMBOL "?relay", Delay_us
readDHT11           SYMBOL "readDHT11"
??readDHT11?relay   SYMBOL "?relay", readDHT11

        EXTERN Onboard_wait
        FUNCTION Onboard_wait,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ??Onboard_wait?relay
        FUNCTION ??Onboard_wait?relay,00H

// H:\ÎïÁªÍøÊµÑµÏîÄ¿ËùÓĞ×ÊÁÏ\2.ÏîÄ¿ÍêÕûÔ´Âë\cc2530\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\GenericApp\Source\dht11.C
//    1 /****************************************************************************
//    2 * ÎÄ ¼ş Ãû: DHT11.c
//    3 * ×÷    Õß: Daniel Peng
//    4 * ĞŞ    ¶©: 2022-5-10
//    5 * °æ    ±¾: 1.0
//    6 * Ãè    Êö: ÎÂÊª¶È´«¸ĞÆ÷Çı¶¯
//    7 ****************************************************************************/
//    8 #include <ioCC2530.h>

        ASEGN SFR_AN:DATA:NOROOT,080H
// union <unnamed> volatile __sfr _A_P0
_A_P0:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,08fH
// unsigned char volatile __sfr P0INP
P0INP:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,090H
// union <unnamed> volatile __sfr _A_P1
_A_P1:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0f3H
// unsigned char volatile __sfr P0SEL
P0SEL:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0fdH
// unsigned char volatile __sfr P0DIR
P0DIR:
        DATA8
        DS 1
//    9 #include "dht11.h"
//   10 
//   11 #include "OnBoard.h"
//   12 
//   13 
//   14 #define LED1 P1_0 
//   15 #define LED2 P1_1
//   16 #define LED3 P1_4 
//   17 
//   18 #define DATA_PIN P0_4
//   19 
//   20 //ÎÂÊª¶È¶¨Òå

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   21 uchar ucharFLAG,uchartemp;
ucharFLAG:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
uchartemp:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   22 uchar shidu_shi,shidu_ge,wendu_shi,wendu_ge=4;
shidu_shi:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
shidu_ge:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
wendu_shi:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_I:XDATA:NOROOT(0)
wendu_ge:
        DATA8
        DS 1
        REQUIRE `?<Initializer for wendu_ge>`
        REQUIRE __INIT_XDATA_I

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   23 uchar ucharT_data_H,ucharT_data_L,ucharRH_data_H,ucharRH_data_L,ucharcheckdata;
ucharT_data_H:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
ucharT_data_L:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
ucharRH_data_H:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
ucharRH_data_L:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
ucharcheckdata:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   24 uchar ucharT_data_H_temp,ucharT_data_L_temp,ucharRH_data_H_temp,ucharRH_data_L_temp,ucharcheckdata_temp;
ucharT_data_H_temp:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
ucharT_data_L_temp:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
ucharRH_data_H_temp:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
ucharRH_data_L_temp:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
ucharcheckdata_temp:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   25 uchar ucharcomdata;
ucharcomdata:
        DS 1
        REQUIRE __INIT_XDATA_Z
//   26 
//   27 //ÑÓÊ±º¯Êı

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   28 void Delay_us(void) //1 usÑÓÊ±
Delay_us:
        CFI Block cfiBlock0 Using cfiCommon0
        CFI Function Delay_us
        CODE
//   29 {
        FUNCALL Delay_us, Onboard_wait
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
//   30 	MicroWait(1); 
        ; Setup parameters for call to function Onboard_wait
        MOV     R2,#0x1
        CFI EndBlock cfiBlock0
        REQUIRE ?Subroutine0
        ; // Fall through to label ?Subroutine0
//   31 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine0:
        CFI Block cfiBlock1 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+-5
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        MOV     R3,#0x0
        LCALL   ??Onboard_wait?relay
        CFI EndBlock cfiBlock1
        REQUIRE ??Subroutine4_0
        ; // Fall through to label ??Subroutine4_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine4_0:
        CFI Block cfiBlock2 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+-5
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        POP     DPH
        CFI CFA_SP SP+-4
        CFI DPH0 SameValue
        POP     DPL
        CFI CFA_SP SP+-3
        CFI DPL0 SameValue
        LJMP    ?BRET
        CFI EndBlock cfiBlock2
//   32 

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   33 void Delay_10us(void) //10 usÑÓÊ±
Delay_10us:
        CFI Block cfiBlock3 Using cfiCommon0
        CFI Function Delay_10us
        CODE
//   34 {
        FUNCALL Delay_10us, Onboard_wait
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
//   35 	MicroWait(10);  
        ; Setup parameters for call to function Onboard_wait
        MOV     R2,#0xa
        SJMP    ?Subroutine0
        CFI EndBlock cfiBlock3
//   36 }
//   37 

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   38 void Delay_ms(unsigned short Time)//n msÑÓÊ±
Delay_ms:
        CFI Block cfiBlock4 Using cfiCommon0
        CFI Function Delay_ms
        CODE
//   39 {
        FUNCALL Delay_ms, Onboard_wait
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
//   40     unsigned char i;
//   41     while(Time--)
??Delay_ms_0:
        MOV     A,R6
        MOV     R0,A
        MOV     A,R7
        MOV     R1,A
        MOV     A,R0
        ADD     A,#-0x1
        DEC     R6
        MOV     A,R1
        ADDC    A,#-0x1
        MOV     R7,A
        MOV     A,R0
        ORL     A,R1
        JZ      ??Delay_ms_1
//   42     {
//   43         for(i=0;i<100;i++)
        MOV     ?V0 + 0,#0x64
//   44             Delay_10us();
??Delay_ms_2:
        ; Setup parameters for call to function Onboard_wait
        MOV     R2,#0xa
        MOV     R3,#0x0
        LCALL   ??Onboard_wait?relay
        DEC     ?V0 + 0
        MOV     A,?V0 + 0
        JZ      ??Delay_ms_0
        SJMP    ??Delay_ms_2
        CFI EndBlock cfiBlock4
//   45     }
//   46 }
??Delay_ms_1:
        REQUIRE ?Subroutine1
        ; // Fall through to label ?Subroutine1

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine1:
        CFI Block cfiBlock5 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x1
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock5

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   47 void DATA_IO_input_Cfg(void)//ÉèÖÃÎªÉÏÀ­ÊäÈëÄ£Ê½
DATA_IO_input_Cfg:
        CFI Block cfiBlock6 Using cfiCommon0
        CFI Function DATA_IO_input_Cfg
        CODE
//   48 {
        ; Saved register size: 0
        ; Auto size: 0
//   49     P0SEL &= 0xEF;   // 1110 1111 °ÑP12ÉèÖÃÎªÆÕÍ¨IOÄ£Ê½
        ANL     0xf3,#0xef
//   50     P0DIR &= 0xEF;   // 1110 1111 °ÑP12ÉèÖÃÎªÊäÈëÄ£Ê½
        ANL     0xfd,#0xef
//   51     P0INP &= 0xEF;   // 1110 1111 °ÑP12ÉèÖÃÎªÉÏÏÂÀ­Ä£Ê½
        ANL     0x8f,#0xef
//   52 }
        LJMP    ?BRET
        CFI EndBlock cfiBlock6
        REQUIRE P0SEL
        REQUIRE P0DIR
        REQUIRE P0INP
//   53 

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   54 void DATA_IO_output_Cfg(void)//ÉèÖÃÎªÊä³öÄ£Ê½
DATA_IO_output_Cfg:
        CFI Block cfiBlock7 Using cfiCommon0
        CFI Function DATA_IO_output_Cfg
        CODE
//   55 {
        ; Saved register size: 0
        ; Auto size: 0
//   56     P0SEL &= 0xEF;   // 1110 1111 °ÑP12ÉèÖÃÎªÆÕÍ¨IOÄ£Ê½
        ANL     0xf3,#0xef
//   57     P0DIR |= 0x10;   // 0001 0000 °ÑP12ÉèÖÃÎªÊä³öÄ£Ê½
        ORL     0xfd,#0x10
//   58 }
        LJMP    ?BRET
        CFI EndBlock cfiBlock7
        REQUIRE P0SEL
        REQUIRE P0DIR
//   59 //ÎÂÊª¶È´«¸Ğ

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   60 void COM(void)    // ÎÂÊªĞ´Èë
COM:
        CFI Block cfiBlock8 Using cfiCommon0
        CFI Function COM
        CODE
//   61 {     
        FUNCALL COM, Onboard_wait
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL COM, Onboard_wait
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL COM, Onboard_wait
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
//   62     uchar i;         
//   63     for(i=0;i<8;i++)    
        MOV     R6,#0x8
//   64     {
//   65         while(!DATA_PIN);
??COM_0:
        MOV     C,0x80.4
        JNC     ??COM_0
//   66         Delay_10us();
        ; Setup parameters for call to function Onboard_wait
        LCALL   ?Subroutine3 & 0xFFFF
//   67         Delay_10us();
//   68 		Delay_10us();
//   69  
//   70         uchartemp=0;
??CrossCallReturnLabel_0:
        MOV     DPTR,#uchartemp
        CLR     A
        MOVX    @DPTR,A
//   71         if(DATA_PIN)
        MOV     C,0x80.4
        JNC     ??COM_1
//   72 			uchartemp=1;
        INC     A
        MOVX    @DPTR,A
//   73         while(DATA_PIN);   
??COM_1:
        MOV     C,0x80.4
        JC      ??COM_1
//   74         ucharcomdata<<=1;
//   75         ucharcomdata|=uchartemp; 
        PUSH    DPL
        CFI CFA_SP SP+-1
        MOV     DPTR,#ucharcomdata
        MOVX    A,@DPTR
        CLR     C
        RLC     A
        MOV     DPH,#(uchartemp >> 8) & 0xff
        POP     DPL
        CFI CFA_SP SP+0
        MOV     R0,A
        MOVX    A,@DPTR
        ORL     A,R0
        MOV     DPTR,#ucharcomdata
        MOVX    @DPTR,A
//   76     }    
        DEC     R6
        MOV     A,R6
        JNZ     ??COM_0
//   77 }
        SJMP    ?Subroutine1
        CFI EndBlock cfiBlock8
        REQUIRE _A_P0
//   78 

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   79 void readDHT11(void)   //ÎÂÊª´«¸ĞÆô¶¯
readDHT11:
        CFI Block cfiBlock9 Using cfiCommon0
        CFI Function readDHT11
        CODE
//   80 {
        FUNCALL readDHT11, DATA_IO_output_Cfg
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL readDHT11, Delay_ms
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL readDHT11, Onboard_wait
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL readDHT11, Onboard_wait
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL readDHT11, Onboard_wait
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL readDHT11, Onboard_wait
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL readDHT11, DATA_IO_input_Cfg
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL readDHT11, COM
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL readDHT11, COM
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL readDHT11, COM
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL readDHT11, COM
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL readDHT11, COM
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
//   81 
//   82 	LED1 = 1;
        SETB    0x90.0
//   83 	DATA_IO_output_Cfg();
        ; Setup parameters for call to function DATA_IO_output_Cfg
        LCALL   ??DATA_IO_output_Cfg?relay
//   84 	
//   85     DATA_PIN=0;
        CLR     0x80.4
//   86     Delay_ms(20);  //>18MS
        ; Setup parameters for call to function Delay_ms
        MOV     R2,#0x14
        MOV     R3,#0x0
        LCALL   ??Delay_ms?relay
//   87     DATA_PIN=1; 
        SETB    0x80.4
//   88    // P1DIR &= ~0x04; //ÖØĞÂÅäÖÃIO¿Ú·½ÏòÊäÈë
//   89    
//   90     Delay_10us();
        ; Setup parameters for call to function Onboard_wait
        LCALL   ?Subroutine3 & 0xFFFF
//   91     Delay_10us();                        
//   92     Delay_10us();
//   93     Delay_10us();
??CrossCallReturnLabel_1:
        ; Setup parameters for call to function Onboard_wait
        MOV     R2,#0xa
        MOV     R3,#0x0
        LCALL   ??Onboard_wait?relay
//   94 
//   95 	DATA_IO_input_Cfg();	   
        ; Setup parameters for call to function DATA_IO_input_Cfg
        LCALL   ??DATA_IO_input_Cfg?relay
//   96 	
//   97 	#if 1
//   98     if(!DATA_PIN) //ÅĞ¶Ï´Ó»úÊÇ·ñµÍµçÆ½Ó¦´ğ
        MOV     C,0x80.4
        JNC     $+5
        LJMP    ??readDHT11_0 & 0xFFFF
//   99     {
//  100         while(!DATA_PIN);
??readDHT11_1:
        MOV     C,0x80.4
        JNC     ??readDHT11_1
//  101         while(DATA_PIN); 
??readDHT11_2:
        MOV     C,0x80.4
        JC      ??readDHT11_2
//  102         COM();
        ; Setup parameters for call to function COM
        LCALL   ??Subroutine5_0 & 0xFFFF
//  103         ucharRH_data_H_temp=ucharcomdata;
??CrossCallReturnLabel_6:
        MOV     DPTR,#ucharRH_data_H_temp
        LCALL   ?Subroutine2 & 0xFFFF
//  104         COM();
//  105         ucharRH_data_L_temp=ucharcomdata;
??CrossCallReturnLabel_2:
        MOV     DPTR,#ucharRH_data_L_temp
        LCALL   ?Subroutine2 & 0xFFFF
//  106         COM();
//  107         ucharT_data_H_temp=ucharcomdata;
??CrossCallReturnLabel_3:
        MOV     DPTR,#ucharT_data_H_temp
        LCALL   ?Subroutine2 & 0xFFFF
//  108         COM();
//  109         ucharT_data_L_temp=ucharcomdata;
??CrossCallReturnLabel_4:
        MOV     DPTR,#ucharT_data_L_temp
        LCALL   ?Subroutine2 & 0xFFFF
//  110         COM();
//  111         ucharcheckdata_temp=ucharcomdata;
??CrossCallReturnLabel_5:
        MOV     DPTR,#ucharcheckdata_temp
        MOVX    @DPTR,A
//  112         DATA_PIN=1; 
        SETB    0x80.4
//  113 		LED1 = 0;
        CLR     0x90.0
//  114         uchartemp=(ucharT_data_H_temp+ucharT_data_L_temp+ucharRH_data_H_temp+ucharRH_data_L_temp);
        MOV     DPTR,#ucharRH_data_L_temp
        PUSH    DPL
        CFI CFA_SP SP+-6
        PUSH    DPH
        CFI CFA_SP SP+-7
        MOV     DPTR,#ucharRH_data_H_temp
        PUSH    DPL
        CFI CFA_SP SP+-8
        PUSH    DPH
        CFI CFA_SP SP+-9
        MOV     DPTR,#ucharT_data_L_temp
        PUSH    DPL
        CFI CFA_SP SP+-10
        MOV     DPTR,#ucharT_data_H_temp
        MOVX    A,@DPTR
        MOV     DPH,#(ucharT_data_L_temp >> 8) & 0xff
        POP     DPL
        CFI CFA_SP SP+-9
        MOV     R0,A
        MOVX    A,@DPTR
        ADD     A,R0
        POP     DPH
        CFI CFA_SP SP+-8
        POP     DPL
        CFI CFA_SP SP+-7
        MOV     R0,A
        MOVX    A,@DPTR
        ADD     A,R0
        POP     DPH
        CFI CFA_SP SP+-6
        POP     DPL
        CFI CFA_SP SP+-5
        MOV     R0,A
        MOVX    A,@DPTR
        ADD     A,R0
        MOV     DPTR,#uchartemp
        MOVX    @DPTR,A
//  115         if(uchartemp==ucharcheckdata_temp)
        MOV     R0,A
        MOV     DPTR,#ucharcheckdata_temp
        MOVX    A,@DPTR
        XRL     A,R0
        JNZ     ??readDHT11_3
//  116         {
//  117             ucharRH_data_H=ucharRH_data_H_temp;
        MOV     DPTR,#ucharRH_data_H_temp
        MOVX    A,@DPTR
        MOV     DPTR,#ucharRH_data_H
        MOVX    @DPTR,A
//  118             ucharRH_data_L=ucharRH_data_L_temp;
        MOV     DPTR,#ucharRH_data_L_temp
        MOVX    A,@DPTR
        MOV     DPTR,#ucharRH_data_L
        MOVX    @DPTR,A
//  119             ucharT_data_H=ucharT_data_H_temp;
        MOV     DPTR,#ucharT_data_H_temp
        MOVX    A,@DPTR
        MOV     DPTR,#ucharT_data_H
        MOVX    @DPTR,A
//  120             ucharT_data_L=ucharT_data_L_temp;
        MOV     DPTR,#ucharT_data_L_temp
        MOVX    A,@DPTR
        MOV     DPTR,#ucharT_data_L
        MOVX    @DPTR,A
//  121             ucharcheckdata=ucharcheckdata_temp;
        MOV     DPTR,#ucharcheckdata_temp
        MOVX    A,@DPTR
        MOV     DPTR,#ucharcheckdata
        MOVX    @DPTR,A
//  122         }
//  123         wendu_shi=ucharT_data_H/10; 
??readDHT11_3:
        MOV     B,#0xa
        MOV     DPTR,#ucharT_data_H
        MOVX    A,@DPTR
        DIV     AB
        MOV     DPTR,#wendu_shi
        MOVX    @DPTR,A
//  124         wendu_ge=ucharT_data_H%10;
        MOV     DPTR,#ucharT_data_H
        MOVX    A,@DPTR
        MOV     B,#0xa
        DIV     AB
        MOV     A,B
        MOV     DPTR,#wendu_ge
        MOVX    @DPTR,A
//  125         
//  126         shidu_shi=ucharRH_data_H/10; 
        MOV     B,#0xa
        MOV     DPTR,#ucharRH_data_H
        MOVX    A,@DPTR
        DIV     AB
        MOV     DPTR,#shidu_shi
        MOVX    @DPTR,A
//  127         shidu_ge=ucharRH_data_H%10;        
        MOV     DPTR,#ucharRH_data_H
        MOVX    A,@DPTR
        MOV     B,#0xa
        DIV     AB
        MOV     A,B
        SJMP    ??readDHT11_4
//  128     } 
//  129     else //Ã»ÓÃ³É¹¦¶ÁÈ¡£¬·µ»Ø0
//  130     {
//  131     	LED2 =1 ;
??readDHT11_0:
        SETB    0x90.1
//  132         wendu_shi=0; 
        MOV     DPTR,#wendu_shi
        CLR     A
        MOVX    @DPTR,A
//  133         wendu_ge=0;
        MOV     DPTR,#wendu_ge
        MOVX    @DPTR,A
//  134         
//  135         shidu_shi=0; 
        MOV     DPTR,#shidu_shi
        MOVX    @DPTR,A
//  136         shidu_ge=0;  
??readDHT11_4:
        MOV     DPTR,#shidu_ge
        MOVX    @DPTR,A
//  137     } 
//  138 	#endif
//  139 }
        LJMP    ??Subroutine4_0 & 0xFFFF
        CFI EndBlock cfiBlock9
        REQUIRE _A_P1
        REQUIRE _A_P0

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine3:
        CFI Block cfiCond10 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_0
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond11 Using cfiCommon0
        CFI (cfiCond11) NoFunction
        CFI (cfiCond11) Conditional ??CrossCallReturnLabel_1
        CFI (cfiCond11) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond11) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond11) CFA_SP SP+-5
        CFI Block cfiPicker12 Using cfiCommon1
        CFI (cfiPicker12) NoFunction
        CFI (cfiPicker12) Picker
        MOV     R2,#0xa
        MOV     R3,#0x0
        LCALL   ??Onboard_wait?relay
        ; Setup parameters for call to function Onboard_wait
        ; Setup parameters for call to function Onboard_wait
        MOV     R2,#0xa
        MOV     R3,#0x0
        LCALL   ??Onboard_wait?relay
        ; Setup parameters for call to function Onboard_wait
        ; Setup parameters for call to function Onboard_wait
        MOV     R2,#0xa
        MOV     R3,#0x0
        LCALL   ??Onboard_wait?relay
        RET
        CFI EndBlock cfiCond10
        CFI EndBlock cfiCond11
        CFI EndBlock cfiPicker12

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine2:
        CFI Block cfiCond13 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_2
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        CFI Block cfiCond14 Using cfiCommon0
        CFI (cfiCond14) NoFunction
        CFI (cfiCond14) Conditional ??CrossCallReturnLabel_3
        CFI (cfiCond14) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond14) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond14) CFA_SP SP+-5
        CFI Block cfiCond15 Using cfiCommon0
        CFI (cfiCond15) NoFunction
        CFI (cfiCond15) Conditional ??CrossCallReturnLabel_4
        CFI (cfiCond15) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond15) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond15) CFA_SP SP+-5
        CFI Block cfiCond16 Using cfiCommon0
        CFI (cfiCond16) NoFunction
        CFI (cfiCond16) Conditional ??CrossCallReturnLabel_5
        CFI (cfiCond16) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond16) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond16) CFA_SP SP+-5
        CFI Block cfiPicker17 Using cfiCommon1
        CFI (cfiPicker17) NoFunction
        CFI (cfiPicker17) Picker
        MOVX    @DPTR,A
        CFI EndBlock cfiCond13
        CFI EndBlock cfiCond14
        CFI EndBlock cfiCond15
        CFI EndBlock cfiCond16
        CFI EndBlock cfiPicker17
        ; Setup parameters for call to function COM
        ; Setup parameters for call to function COM
        ; Setup parameters for call to function COM
        ; Setup parameters for call to function COM
        REQUIRE ??Subroutine5_0
        ; // Fall through to label ??Subroutine5_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine5_0:
        CFI Block cfiCond18 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_6
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        CFI Block cfiCond19 Using cfiCommon0
        CFI (cfiCond19) NoFunction
        CFI (cfiCond19) Conditional ??CrossCallReturnLabel_2
        CFI (cfiCond19) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond19) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond19) CFA_SP SP+-5
        CFI Block cfiCond20 Using cfiCommon0
        CFI (cfiCond20) NoFunction
        CFI (cfiCond20) Conditional ??CrossCallReturnLabel_3
        CFI (cfiCond20) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond20) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond20) CFA_SP SP+-5
        CFI Block cfiCond21 Using cfiCommon0
        CFI (cfiCond21) NoFunction
        CFI (cfiCond21) Conditional ??CrossCallReturnLabel_4
        CFI (cfiCond21) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond21) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond21) CFA_SP SP+-5
        CFI Block cfiCond22 Using cfiCommon0
        CFI (cfiCond22) NoFunction
        CFI (cfiCond22) Conditional ??CrossCallReturnLabel_5
        CFI (cfiCond22) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond22) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond22) CFA_SP SP+-5
        CFI Block cfiPicker23 Using cfiCommon1
        CFI (cfiPicker23) NoFunction
        CFI (cfiPicker23) Picker
        LCALL   ??COM?relay
        MOV     DPTR,#ucharcomdata
        MOVX    A,@DPTR
        RET
        CFI EndBlock cfiCond18
        CFI EndBlock cfiCond19
        CFI EndBlock cfiCond20
        CFI EndBlock cfiCond21
        CFI EndBlock cfiCond22
        CFI EndBlock cfiPicker23

        RSEG XDATA_ID:CODE:NOROOT(0)
`?<Initializer for wendu_ge>`:
        DATA8
        DB 4

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??Delay_us?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    Delay_us

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??Delay_10us?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    Delay_10us

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??Delay_ms?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    Delay_ms

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??DATA_IO_input_Cfg?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    DATA_IO_input_Cfg

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??DATA_IO_output_Cfg?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    DATA_IO_output_Cfg

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??COM?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    COM

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??readDHT11?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    readDHT11

        END
// 
// 433 bytes in segment BANKED_CODE
//  42 bytes in segment BANK_RELAYS
//   5 bytes in segment SFR_AN
//   1 byte  in segment XDATA_I
//   1 byte  in segment XDATA_ID
//  16 bytes in segment XDATA_Z
// 
// 476 bytes of CODE  memory
//   0 bytes of DATA  memory (+ 5 bytes shared)
//  17 bytes of XDATA memory
//
//Errors: none
//Warnings: none
